steps:
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Test de l'URL de l'image:"
        echo -n "$$_LOCATION-docker.pkg.dev/${PROJECT_ID}/$$_REPOSITORY/$$_IMAGE:$$_TAG"
        echo "Location: $$_LOCATION"
        echo "Repository: $$_REPOSITORY"
        echo "Image: $$_IMAGE"
        echo "Tag: $$_TAG"
    secretEnv: ['_LOCATION', '_REPOSITORY', '_IMAGE', '_TAG']

  # Build et push de l'image container vers Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [ '-c','docker build -t $$_LOCATION-docker.pkg.dev/$PROJECT_ID/$$_REPOSITORY/$$_IMAGE:$$_TAG .']
    secretEnv: ['_LOCATION', '_REPOSITORY', '_IMAGE', '_TAG']

  # DÃ©ploiement vers Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - '$$_LOCATION-docker.pkg.dev/${PROJECT_ID}/$$_REPOSITORY/$$_IMAGE:$$_TAG'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
    secretEnv: ['_LOCATION', '_REPOSITORY', '_IMAGE', '_TAG', '_SERVICE_NAME', '_REGION']

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/_LOCATION/versions/latest
      env: '_LOCATION'
    - versionName: projects/${PROJECT_ID}/secrets/_REPOSITORY/versions/latest
      env: '_REPOSITORY'
    - versionName: projects/${PROJECT_ID}/secrets/_IMAGE/versions/latest
      env: '_IMAGE'
    - versionName: projects/${PROJECT_ID}/secrets/_TAG/versions/latest
      env: '_TAG'
    - versionName: projects/${PROJECT_ID}/secrets/_SERVICE_NAME/versions/latest
      env: '_SERVICE_NAME'
    - versionName: projects/${PROJECT_ID}/secrets/_REGION/versions/latest
      env: '_REGION'
